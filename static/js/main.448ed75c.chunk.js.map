{"version":3,"sources":["reportWebVitals.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","body","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.448ed75c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}\r\n        } shadow-lg`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const changeUppercase = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  };\r\n\r\n  const changeLowercase = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  };\r\n\r\n  const clearText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text is Cleared\", \"success\");\r\n  };\r\n\r\n  const copyText = () => {\r\n    let textArea = document.getElementById(\"myTextarea\");\r\n    textArea.select();\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text is Copied\", \"success\");\r\n  };\r\n\r\n  const removeExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces has been Removed\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  //   text = \"Software Developer\"; //Wrong way to change the state\r\n  //   setText(\"New text\"); //Correct way to change the state\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-4 \"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <div className=\"fs-5 my-4\">{props.heading}</div>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control device-width\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myTextarea\"\r\n            rows=\"10\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#343a40\" : \"white\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"d-flex text-center gap-3\">\r\n          <button className=\"btn btn-light\" onClick={changeUppercase}>\r\n            Convert to Uppercase\r\n          </button>\r\n          <button className=\"btn btn-light\" onClick={changeLowercase}>\r\n            Convert to Lowercase\r\n          </button>\r\n          <button className=\"btn btn-light\" onClick={clearText}>\r\n            Clear\r\n          </button>\r\n          <button className=\"btn btn-light\" onClick={copyText}>\r\n            Copy\r\n          </button>\r\n          <button className=\"btn btn-light\" onClick={removeExtraSpaces}>\r\n            Remove Extra Spaces\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h2 style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n          Your Text Summary\r\n        </h2>\r\n        <p style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n          {text.split(\" \").length} Words and {text.length} Characters\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst capitalize = (word) => {\r\n  const lower = word.toLowerCase();\r\n  return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n};\r\n\r\nexport default function (props) {\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\n// import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //whether darkmode is enables or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      showAlert(\"dark mode is enabled\", \"success\");\n      document.title = \"TextUtils-Dark-Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode is enabled\", \"success\");\n      document.title = \"TextUtils-Light-Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <div className=\"vh-100\">\n        <Navbar\n          title=\"CaseBuddy\"\n          aboutText=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        {/* <Navbar /> default props */}\n        {/* <Routes> */}\n        {/* <Route exact path=\"/about\" element={<About mode={mode} />}></Route>\n            <Route */}\n        {/* exact path=\"/\" element= */}\n        {/* { */}\n        <div className=\"container shadow-lg rounded my-4 p-4\">\n          <TextForm\n            heading=\"Change to UPPERCASE/lowercase:\"\n            mode={mode}\n            showAlert={showAlert}\n          />\n        </div>\n        {/* } */}\n        {/* ></Route> */}\n        {/* </Routes> */}\n        {/* <About mode={mode} /> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <>\n    <App />\n  </>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}